{"version":3,"sources":["webpack:///./src/components/Utils/PostTags/PostTags.jsx","webpack:///./src/templates/post.jsx","webpack:///./src/components/Utils/SEO/SEO.jsx","webpack:///./node_modules/url-join/lib/url-join.js","webpack:///./node_modules/lodash/toString.js","webpack:///./node_modules/lodash/kebabCase.js","webpack:///./node_modules/lodash/_createCompounder.js","webpack:///./node_modules/lodash/_arrayReduce.js","webpack:///./node_modules/lodash/deburr.js","webpack:///./node_modules/lodash/_deburrLetter.js","webpack:///./node_modules/lodash/_basePropertyOf.js","webpack:///./node_modules/lodash/_baseToString.js","webpack:///./node_modules/lodash/_arrayMap.js","webpack:///./node_modules/lodash/isArray.js","webpack:///./node_modules/lodash/words.js","webpack:///./node_modules/lodash/_asciiWords.js","webpack:///./node_modules/lodash/_hasUnicodeWord.js","webpack:///./node_modules/lodash/_unicodeWords.js"],"names":["TagButton","styled","Button","PostTags","render","tags","this","props","className","map","tag","key","style","textDecoration","to","mr","mt","type","Component","PostTemplate","data","slug","pageContext","postNode","markdownRemark","post","frontmatter","id","category_id","config","postDefaultCategoryID","ContainerFlex","title","siteTitle","SEO","postPath","postSEO","ContentContainer","date","ContainerTags","dangerouslySetInnerHTML","__html","html","React","pageQuery","Box","Flex","description","image","postURL","postMeta","excerpt","cover","urljoin","siteUrl","pathPrefix","siteDescription","siteLogo","match","blogURL","schemaOrgJSONLD","url","name","alternateName","siteTitleAlt","push","itemListElement","position","item","headline","content","JSON","stringify","property","siteFBAppID","userTwitter","definition","normalize","strArray","resultArray","length","TypeError","first","shift","replace","i","component","str","join","parts","split","arguments","slice","call","module","exports","baseToString","value","kebabCase","createCompounder","result","word","index","toLowerCase","arrayReduce","deburr","words","reApos","RegExp","callback","string","array","iteratee","accumulator","initAccum","deburrLetter","toString","reLatin","reComboMark","basePropertyOf","object","undefined","Symbol","arrayMap","isArray","isSymbol","INFINITY","symbolProto","prototype","symbolToString","Array","asciiWords","hasUnicodeWord","unicodeWords","pattern","guard","reAsciiWord","reHasUnicodeWord","test","rsBreakRange","rsMathOpRange","rsBreak","rsDigits","rsDingbat","rsLower","rsMisc","rsRegional","rsSurrPair","rsUpper","rsMiscLower","rsMiscUpper","reOptMod","rsModifier","rsSeq","rsEmoji","reUnicodeWord"],"mappings":"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","file":"component---src-templates-post-jsx-b1aca42ec6a8d1b28b18.js","sourcesContent":["import React, { Component } from 'react';\nimport _ from 'lodash';\nimport { Link } from 'gatsby';\nimport styled from 'styled-components';\nimport { Flex, Box, Heading, Text, Button, Image, Card } from 'rebass/styled-components';\n\nconst TagButton = styled(Button)`\n  font-size: 11px;\n  padding: 5px 10px ;\n  color: white;\n  background-color: black;\n  transition: all .3s;\n  :hover{\n  color: black;\n  background-color: white;\n  cursor: pointer;\n  }\n`;\nclass PostTags extends Component {\n\trender() {\n\t\tconst { tags } = this.props;\n\t\treturn (\n\t\t\t<div className='post-tag-container'>\n\t\t\t\t{tags &&\n\t\t\t\t\ttags.map((tag) => (\n\t\t\t\t\t\t<Link key={tag} style={{ textDecoration: 'none' }} to={`/tags/${_.kebabCase(tag)}`}>\n\t\t\t\t\t\t\t<TagButton mr={1} mt={1} type='button'>\n\t\t\t\t\t\t\t\t{tag}\n\t\t\t\t\t\t\t</TagButton>\n\t\t\t\t\t\t</Link>\n\t\t\t\t\t))}\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default PostTags;\n","import React from 'react';\nimport Helmet from 'react-helmet';\n\nimport { graphql } from 'gatsby';\n\nimport Layout from '../layout';\n\nimport PostTags from '../components/Utils/PostTags/PostTags';\nimport SEO from '../components/Utils/SEO/SEO';\n\nimport config from '../../data/SiteConfig';\nimport './b16-tomorrow-dark.css';\n\nimport styled from 'styled-components';\nimport { Flex, Box, Heading, Text } from 'rebass/styled-components';\n\nexport default class PostTemplate extends React.Component {\n\trender() {\n\t\tconst { data, pageContext } = this.props;\n\t\tconst { slug } = pageContext;\n\t\tconst postNode = data.markdownRemark;\n\t\tconst post = postNode.frontmatter;\n\t\tif (!post.id) {\n\t\t\tpost.id = slug;\n\t\t}\n\t\tif (!post.category_id) {\n\t\t\tpost.category_id = config.postDefaultCategoryID;\n\t\t}\n\t\treturn (\n\t\t\t<Layout>\n\t\t\t\t<ContainerFlex>\n\t\t\t\t\t<Helmet>\n\t\t\t\t\t\t<title>{`${post.title} | ${config.siteTitle}`}</title>\n\t\t\t\t\t</Helmet>\n\t\t\t\t\t<SEO postPath={slug} postNode={postNode} postSEO />\n\t\t\t\t\t<ContentContainer>\n\t\t\t\t\t\t<Heading>{post.title}</Heading>\n\t\t\t\t\t\t<Text>{post.date}</Text>\n\t\t\t\t\t\t<ContainerTags className='post-meta'>\n\t\t\t\t\t\t\t<PostTags tags={post.tags} />\n\t\t\t\t\t\t</ContainerTags>\n\t\t\t\t\t\t<div dangerouslySetInnerHTML={{ __html: postNode.html }} />\n\t\t\t\t\t</ContentContainer>\n\t\t\t\t</ContainerFlex>\n\t\t\t</Layout>\n\t\t);\n\t}\n}\n\n/* eslint no-undef: \"off\" */\nexport const pageQuery = graphql`\n\tquery BlogPostBySlug($slug: String!) {\n\t\tmarkdownRemark(fields: { slug: { eq: $slug } }) {\n\t\t\thtml\n\t\t\ttimeToRead\n\t\t\texcerpt\n\t\t\tfrontmatter {\n\t\t\t\ttitle\n\t\t\t\tcover\n\t\t\t\tdate(formatString: \"MM/YYYY\")\n\t\t\t\tcategory\n\t\t\t\ttags\n\t\t\t}\n\t\t\tfields {\n\t\t\t\tslug\n\t\t\t\tdate(formatString: \"MM/YYYY\")\n\t\t\t}\n\t\t}\n\t}\n`;\n\nconst ContentContainer = styled(Box)`\n  min-height: 70vh;\n  max-width: 1300px;\n  padding: 50px 0px 20px 0px;\n  img {\n    max-width: 100%;\n    width: 100%;\n    height: auto;\n    box-shadow: grey 0.8px 0.9px 3px;\n    margin-bottom: 20px; \n  }\n  @media (max-width: 1300px) {\n    padding: 10px;\n  }\n`;\nconst ContainerFlex = styled(Flex)`\n  justify-content: center;\n`;\nconst ContainerTags = styled(Box)`\n  justify-content: center;\n  margin-bottom: 15px;\n`;\n","import React, { Component } from 'react';\nimport Helmet from 'react-helmet';\nimport urljoin from 'url-join';\nimport config from '../../../../data/SiteConfig';\n\nclass SEO extends Component {\n\trender() {\n\t\tconst { postNode, postPath, postSEO } = this.props;\n\t\tlet title;\n\t\tlet description;\n\t\tlet image;\n\t\tlet postURL;\n\t\tif (postSEO) {\n\t\t\tconst postMeta = postNode.frontmatter;\n\t\t\t({ title } = postMeta);\n\t\t\tdescription = postMeta.description ? postMeta.description : postNode.excerpt;\n\t\t\timage = postMeta.cover;\n\t\t\tpostURL = urljoin(config.siteUrl, config.pathPrefix, postPath);\n\t\t}\n\t\telse {\n\t\t\ttitle = config.siteTitle;\n\t\t\tdescription = config.siteDescription;\n\t\t\timage = config.siteLogo;\n\t\t}\n\n\t\tif (!image.match(`(https?|ftp|file)://[-A-Za-z0-9+&@#/%?=~_|!:,.;]+[-A-Za-z0-9+&@#/%=~_|]`))\n\t\t\timage = urljoin(config.siteUrl, config.pathPrefix, image);\n\n\t\tconst blogURL = urljoin(config.siteUrl, config.pathPrefix);\n\t\tconst schemaOrgJSONLD = [\n\t\t\t{\n\t\t\t\t'@context': 'http://schema.org',\n\t\t\t\t'@type': 'WebSite',\n\t\t\t\turl: blogURL,\n\t\t\t\tname: title,\n\t\t\t\talternateName: config.siteTitleAlt ? config.siteTitleAlt : ''\n\t\t\t}\n\t\t];\n\t\tif (postSEO) {\n\t\t\tschemaOrgJSONLD.push(\n\t\t\t\t{\n\t\t\t\t\t'@context': 'http://schema.org',\n\t\t\t\t\t'@type': 'BreadcrumbList',\n\t\t\t\t\titemListElement: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t'@type': 'ListItem',\n\t\t\t\t\t\t\tposition: 1,\n\t\t\t\t\t\t\titem: {\n\t\t\t\t\t\t\t\t'@id': postURL,\n\t\t\t\t\t\t\t\tname: title,\n\t\t\t\t\t\t\t\timage\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t'@context': 'http://schema.org',\n\t\t\t\t\t'@type': 'BlogPosting',\n\t\t\t\t\turl: blogURL,\n\t\t\t\t\tname: title,\n\t\t\t\t\talternateName: config.siteTitleAlt ? config.siteTitleAlt : '',\n\t\t\t\t\theadline: title,\n\t\t\t\t\timage: {\n\t\t\t\t\t\t'@type': 'ImageObject',\n\t\t\t\t\t\turl: image\n\t\t\t\t\t},\n\t\t\t\t\tdescription\n\t\t\t\t}\n\t\t\t);\n\t\t}\n\t\treturn (\n\t\t\t<Helmet>\n\t\t\t\t{/* General tags */}\n\t\t\t\t<meta name='description' content={description} />\n\t\t\t\t<meta name='image' content={image} />\n\n\t\t\t\t{/* Schema.org tags */}\n\t\t\t\t<script type='application/ld+json'>{JSON.stringify(schemaOrgJSONLD)}</script>\n\n\t\t\t\t{/* OpenGraph tags */}\n\t\t\t\t<meta property='og:url' content={postSEO ? postURL : blogURL} />\n\t\t\t\t{postSEO ? <meta property='og:type' content='article' /> : null}\n\t\t\t\t<meta property='og:title' content={title} />\n\t\t\t\t<meta property='og:description' content={description} />\n\t\t\t\t<meta property='og:image' content={image} />\n\t\t\t\t<meta property='fb:app_id' content={config.siteFBAppID ? config.siteFBAppID : ''} />\n\n\t\t\t\t{/* Twitter Card tags */}\n\t\t\t\t<meta name='twitter:card' content='summary_large_image' />\n\t\t\t\t<meta name='twitter:creator' content={config.userTwitter ? config.userTwitter : ''} />\n\t\t\t\t<meta name='twitter:title' content={title} />\n\t\t\t\t<meta name='twitter:description' content={description} />\n\t\t\t\t<meta name='twitter:image' content={image} />\n\t\t\t</Helmet>\n\t\t);\n\t}\n}\n\nexport default SEO;\n","require(\"core-js/modules/es6.regexp.split\");\n\nrequire(\"core-js/modules/es6.regexp.replace\");\n\nrequire(\"core-js/modules/es6.regexp.match\");\n\n(function (name, context, definition) {\n  if (typeof module !== 'undefined' && module.exports) module.exports = definition();else if (typeof define === 'function' && define.amd) define(definition);else context[name] = definition();\n})('urljoin', this, function () {\n  function normalize(strArray) {\n    var resultArray = [];\n\n    if (strArray.length === 0) {\n      return '';\n    }\n\n    if (typeof strArray[0] !== 'string') {\n      throw new TypeError('Url must be a string. Received ' + strArray[0]);\n    } // If the first part is a plain protocol, we combine it with the next part.\n\n\n    if (strArray[0].match(/^[^/:]+:\\/*$/) && strArray.length > 1) {\n      var first = strArray.shift();\n      strArray[0] = first + strArray[0];\n    } // There must be two or three slashes in the file protocol, two slashes in anything else.\n\n\n    if (strArray[0].match(/^file:\\/\\/\\//)) {\n      strArray[0] = strArray[0].replace(/^([^/:]+):\\/*/, '$1:///');\n    } else {\n      strArray[0] = strArray[0].replace(/^([^/:]+):\\/*/, '$1://');\n    }\n\n    for (var i = 0; i < strArray.length; i++) {\n      var component = strArray[i];\n\n      if (typeof component !== 'string') {\n        throw new TypeError('Url must be a string. Received ' + component);\n      }\n\n      if (component === '') {\n        continue;\n      }\n\n      if (i > 0) {\n        // Removing the starting slashes for each component but the first.\n        component = component.replace(/^[\\/]+/, '');\n      }\n\n      if (i < strArray.length - 1) {\n        // Removing the ending slashes for each component but the last.\n        component = component.replace(/[\\/]+$/, '');\n      } else {\n        // For the last component we will combine multiple slashes to a single one.\n        component = component.replace(/[\\/]+$/, '/');\n      }\n\n      resultArray.push(component);\n    }\n\n    var str = resultArray.join('/'); // Each input component is now separated by a single slash except the possible first plain protocol part.\n    // remove trailing slash before parameters or hash\n\n    str = str.replace(/\\/(\\?|&|#[^!])/g, '$1'); // replace ? in parameters with &\n\n    var parts = str.split('?');\n    str = parts.shift() + (parts.length > 0 ? '?' : '') + parts.join('&');\n    return str;\n  }\n\n  return function () {\n    var input;\n\n    if (typeof arguments[0] === 'object') {\n      input = arguments[0];\n    } else {\n      input = [].slice.call(arguments);\n    }\n\n    return normalize(input);\n  };\n});","var baseToString = require('./_baseToString');\n/**\n * Converts `value` to a string. An empty string is returned for `null`\n * and `undefined` values. The sign of `-0` is preserved.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n * @example\n *\n * _.toString(null);\n * // => ''\n *\n * _.toString(-0);\n * // => '-0'\n *\n * _.toString([1, 2, 3]);\n * // => '1,2,3'\n */\n\n\nfunction toString(value) {\n  return value == null ? '' : baseToString(value);\n}\n\nmodule.exports = toString;","var createCompounder = require('./_createCompounder');\n/**\n * Converts `string` to\n * [kebab case](https://en.wikipedia.org/wiki/Letter_case#Special_case_styles).\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category String\n * @param {string} [string=''] The string to convert.\n * @returns {string} Returns the kebab cased string.\n * @example\n *\n * _.kebabCase('Foo Bar');\n * // => 'foo-bar'\n *\n * _.kebabCase('fooBar');\n * // => 'foo-bar'\n *\n * _.kebabCase('__FOO_BAR__');\n * // => 'foo-bar'\n */\n\n\nvar kebabCase = createCompounder(function (result, word, index) {\n  return result + (index ? '-' : '') + word.toLowerCase();\n});\nmodule.exports = kebabCase;","require(\"core-js/modules/es6.regexp.replace\");\n\nrequire(\"core-js/modules/es6.regexp.constructor\");\n\nvar arrayReduce = require('./_arrayReduce'),\n    deburr = require('./deburr'),\n    words = require('./words');\n/** Used to compose unicode capture groups. */\n\n\nvar rsApos = \"['\\u2019]\";\n/** Used to match apostrophes. */\n\nvar reApos = RegExp(rsApos, 'g');\n/**\n * Creates a function like `_.camelCase`.\n *\n * @private\n * @param {Function} callback The function to combine each word.\n * @returns {Function} Returns the new compounder function.\n */\n\nfunction createCompounder(callback) {\n  return function (string) {\n    return arrayReduce(words(deburr(string).replace(reApos, '')), callback, '');\n  };\n}\n\nmodule.exports = createCompounder;","/**\n * A specialized version of `_.reduce` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @param {*} [accumulator] The initial value.\n * @param {boolean} [initAccum] Specify using the first element of `array` as\n *  the initial value.\n * @returns {*} Returns the accumulated value.\n */\nfunction arrayReduce(array, iteratee, accumulator, initAccum) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  if (initAccum && length) {\n    accumulator = array[++index];\n  }\n\n  while (++index < length) {\n    accumulator = iteratee(accumulator, array[index], index, array);\n  }\n\n  return accumulator;\n}\n\nmodule.exports = arrayReduce;","require(\"core-js/modules/es6.regexp.replace\");\n\nrequire(\"core-js/modules/es6.regexp.constructor\");\n\nvar deburrLetter = require('./_deburrLetter'),\n    toString = require('./toString');\n/** Used to match Latin Unicode letters (excluding mathematical operators). */\n\n\nvar reLatin = /[\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\xff\\u0100-\\u017f]/g;\n/** Used to compose unicode character classes. */\n\nvar rsComboMarksRange = \"\\\\u0300-\\\\u036f\",\n    reComboHalfMarksRange = \"\\\\ufe20-\\\\ufe2f\",\n    rsComboSymbolsRange = \"\\\\u20d0-\\\\u20ff\",\n    rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange;\n/** Used to compose unicode capture groups. */\n\nvar rsCombo = '[' + rsComboRange + ']';\n/**\n * Used to match [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks) and\n * [combining diacritical marks for symbols](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks_for_Symbols).\n */\n\nvar reComboMark = RegExp(rsCombo, 'g');\n/**\n * Deburrs `string` by converting\n * [Latin-1 Supplement](https://en.wikipedia.org/wiki/Latin-1_Supplement_(Unicode_block)#Character_table)\n * and [Latin Extended-A](https://en.wikipedia.org/wiki/Latin_Extended-A)\n * letters to basic Latin letters and removing\n * [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks).\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category String\n * @param {string} [string=''] The string to deburr.\n * @returns {string} Returns the deburred string.\n * @example\n *\n * _.deburr('déjà vu');\n * // => 'deja vu'\n */\n\nfunction deburr(string) {\n  string = toString(string);\n  return string && string.replace(reLatin, deburrLetter).replace(reComboMark, '');\n}\n\nmodule.exports = deburr;","var basePropertyOf = require('./_basePropertyOf');\n/** Used to map Latin Unicode letters to basic Latin letters. */\n\n\nvar deburredLetters = {\n  // Latin-1 Supplement block.\n  '\\xc0': 'A',\n  '\\xc1': 'A',\n  '\\xc2': 'A',\n  '\\xc3': 'A',\n  '\\xc4': 'A',\n  '\\xc5': 'A',\n  '\\xe0': 'a',\n  '\\xe1': 'a',\n  '\\xe2': 'a',\n  '\\xe3': 'a',\n  '\\xe4': 'a',\n  '\\xe5': 'a',\n  '\\xc7': 'C',\n  '\\xe7': 'c',\n  '\\xd0': 'D',\n  '\\xf0': 'd',\n  '\\xc8': 'E',\n  '\\xc9': 'E',\n  '\\xca': 'E',\n  '\\xcb': 'E',\n  '\\xe8': 'e',\n  '\\xe9': 'e',\n  '\\xea': 'e',\n  '\\xeb': 'e',\n  '\\xcc': 'I',\n  '\\xcd': 'I',\n  '\\xce': 'I',\n  '\\xcf': 'I',\n  '\\xec': 'i',\n  '\\xed': 'i',\n  '\\xee': 'i',\n  '\\xef': 'i',\n  '\\xd1': 'N',\n  '\\xf1': 'n',\n  '\\xd2': 'O',\n  '\\xd3': 'O',\n  '\\xd4': 'O',\n  '\\xd5': 'O',\n  '\\xd6': 'O',\n  '\\xd8': 'O',\n  '\\xf2': 'o',\n  '\\xf3': 'o',\n  '\\xf4': 'o',\n  '\\xf5': 'o',\n  '\\xf6': 'o',\n  '\\xf8': 'o',\n  '\\xd9': 'U',\n  '\\xda': 'U',\n  '\\xdb': 'U',\n  '\\xdc': 'U',\n  '\\xf9': 'u',\n  '\\xfa': 'u',\n  '\\xfb': 'u',\n  '\\xfc': 'u',\n  '\\xdd': 'Y',\n  '\\xfd': 'y',\n  '\\xff': 'y',\n  '\\xc6': 'Ae',\n  '\\xe6': 'ae',\n  '\\xde': 'Th',\n  '\\xfe': 'th',\n  '\\xdf': 'ss',\n  // Latin Extended-A block.\n  \"\\u0100\": 'A',\n  \"\\u0102\": 'A',\n  \"\\u0104\": 'A',\n  \"\\u0101\": 'a',\n  \"\\u0103\": 'a',\n  \"\\u0105\": 'a',\n  \"\\u0106\": 'C',\n  \"\\u0108\": 'C',\n  \"\\u010A\": 'C',\n  \"\\u010C\": 'C',\n  \"\\u0107\": 'c',\n  \"\\u0109\": 'c',\n  \"\\u010B\": 'c',\n  \"\\u010D\": 'c',\n  \"\\u010E\": 'D',\n  \"\\u0110\": 'D',\n  \"\\u010F\": 'd',\n  \"\\u0111\": 'd',\n  \"\\u0112\": 'E',\n  \"\\u0114\": 'E',\n  \"\\u0116\": 'E',\n  \"\\u0118\": 'E',\n  \"\\u011A\": 'E',\n  \"\\u0113\": 'e',\n  \"\\u0115\": 'e',\n  \"\\u0117\": 'e',\n  \"\\u0119\": 'e',\n  \"\\u011B\": 'e',\n  \"\\u011C\": 'G',\n  \"\\u011E\": 'G',\n  \"\\u0120\": 'G',\n  \"\\u0122\": 'G',\n  \"\\u011D\": 'g',\n  \"\\u011F\": 'g',\n  \"\\u0121\": 'g',\n  \"\\u0123\": 'g',\n  \"\\u0124\": 'H',\n  \"\\u0126\": 'H',\n  \"\\u0125\": 'h',\n  \"\\u0127\": 'h',\n  \"\\u0128\": 'I',\n  \"\\u012A\": 'I',\n  \"\\u012C\": 'I',\n  \"\\u012E\": 'I',\n  \"\\u0130\": 'I',\n  \"\\u0129\": 'i',\n  \"\\u012B\": 'i',\n  \"\\u012D\": 'i',\n  \"\\u012F\": 'i',\n  \"\\u0131\": 'i',\n  \"\\u0134\": 'J',\n  \"\\u0135\": 'j',\n  \"\\u0136\": 'K',\n  \"\\u0137\": 'k',\n  \"\\u0138\": 'k',\n  \"\\u0139\": 'L',\n  \"\\u013B\": 'L',\n  \"\\u013D\": 'L',\n  \"\\u013F\": 'L',\n  \"\\u0141\": 'L',\n  \"\\u013A\": 'l',\n  \"\\u013C\": 'l',\n  \"\\u013E\": 'l',\n  \"\\u0140\": 'l',\n  \"\\u0142\": 'l',\n  \"\\u0143\": 'N',\n  \"\\u0145\": 'N',\n  \"\\u0147\": 'N',\n  \"\\u014A\": 'N',\n  \"\\u0144\": 'n',\n  \"\\u0146\": 'n',\n  \"\\u0148\": 'n',\n  \"\\u014B\": 'n',\n  \"\\u014C\": 'O',\n  \"\\u014E\": 'O',\n  \"\\u0150\": 'O',\n  \"\\u014D\": 'o',\n  \"\\u014F\": 'o',\n  \"\\u0151\": 'o',\n  \"\\u0154\": 'R',\n  \"\\u0156\": 'R',\n  \"\\u0158\": 'R',\n  \"\\u0155\": 'r',\n  \"\\u0157\": 'r',\n  \"\\u0159\": 'r',\n  \"\\u015A\": 'S',\n  \"\\u015C\": 'S',\n  \"\\u015E\": 'S',\n  \"\\u0160\": 'S',\n  \"\\u015B\": 's',\n  \"\\u015D\": 's',\n  \"\\u015F\": 's',\n  \"\\u0161\": 's',\n  \"\\u0162\": 'T',\n  \"\\u0164\": 'T',\n  \"\\u0166\": 'T',\n  \"\\u0163\": 't',\n  \"\\u0165\": 't',\n  \"\\u0167\": 't',\n  \"\\u0168\": 'U',\n  \"\\u016A\": 'U',\n  \"\\u016C\": 'U',\n  \"\\u016E\": 'U',\n  \"\\u0170\": 'U',\n  \"\\u0172\": 'U',\n  \"\\u0169\": 'u',\n  \"\\u016B\": 'u',\n  \"\\u016D\": 'u',\n  \"\\u016F\": 'u',\n  \"\\u0171\": 'u',\n  \"\\u0173\": 'u',\n  \"\\u0174\": 'W',\n  \"\\u0175\": 'w',\n  \"\\u0176\": 'Y',\n  \"\\u0177\": 'y',\n  \"\\u0178\": 'Y',\n  \"\\u0179\": 'Z',\n  \"\\u017B\": 'Z',\n  \"\\u017D\": 'Z',\n  \"\\u017A\": 'z',\n  \"\\u017C\": 'z',\n  \"\\u017E\": 'z',\n  \"\\u0132\": 'IJ',\n  \"\\u0133\": 'ij',\n  \"\\u0152\": 'Oe',\n  \"\\u0153\": 'oe',\n  \"\\u0149\": \"'n\",\n  \"\\u017F\": 's'\n};\n/**\n * Used by `_.deburr` to convert Latin-1 Supplement and Latin Extended-A\n * letters to basic Latin letters.\n *\n * @private\n * @param {string} letter The matched letter to deburr.\n * @returns {string} Returns the deburred letter.\n */\n\nvar deburrLetter = basePropertyOf(deburredLetters);\nmodule.exports = deburrLetter;","/**\n * The base implementation of `_.propertyOf` without support for deep paths.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Function} Returns the new accessor function.\n */\nfunction basePropertyOf(object) {\n  return function (key) {\n    return object == null ? undefined : object[key];\n  };\n}\n\nmodule.exports = basePropertyOf;","require(\"core-js/modules/es6.regexp.to-string\");\n\nrequire(\"core-js/modules/es6.object.to-string\");\n\nvar Symbol = require('./_Symbol'),\n    arrayMap = require('./_arrayMap'),\n    isArray = require('./isArray'),\n    isSymbol = require('./isSymbol');\n/** Used as references for various `Number` constants. */\n\n\nvar INFINITY = 1 / 0;\n/** Used to convert symbols to primitives and strings. */\n\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolToString = symbolProto ? symbolProto.toString : undefined;\n/**\n * The base implementation of `_.toString` which doesn't convert nullish\n * values to empty strings.\n *\n * @private\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n */\n\nfunction baseToString(value) {\n  // Exit early for strings to avoid a performance hit in some environments.\n  if (typeof value == 'string') {\n    return value;\n  }\n\n  if (isArray(value)) {\n    // Recursively convert values (susceptible to call stack limits).\n    return arrayMap(value, baseToString) + '';\n  }\n\n  if (isSymbol(value)) {\n    return symbolToString ? symbolToString.call(value) : '';\n  }\n\n  var result = value + '';\n  return result == '0' && 1 / value == -INFINITY ? '-0' : result;\n}\n\nmodule.exports = baseToString;","/**\n * A specialized version of `_.map` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n */\nfunction arrayMap(array, iteratee) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      result = Array(length);\n\n  while (++index < length) {\n    result[index] = iteratee(array[index], index, array);\n  }\n\n  return result;\n}\n\nmodule.exports = arrayMap;","/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\nmodule.exports = isArray;","require(\"core-js/modules/es6.regexp.match\");\n\nvar asciiWords = require('./_asciiWords'),\n    hasUnicodeWord = require('./_hasUnicodeWord'),\n    toString = require('./toString'),\n    unicodeWords = require('./_unicodeWords');\n/**\n * Splits `string` into an array of its words.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category String\n * @param {string} [string=''] The string to inspect.\n * @param {RegExp|string} [pattern] The pattern to match words.\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n * @returns {Array} Returns the words of `string`.\n * @example\n *\n * _.words('fred, barney, & pebbles');\n * // => ['fred', 'barney', 'pebbles']\n *\n * _.words('fred, barney, & pebbles', /[^, ]+/g);\n * // => ['fred', 'barney', '&', 'pebbles']\n */\n\n\nfunction words(string, pattern, guard) {\n  string = toString(string);\n  pattern = guard ? undefined : pattern;\n\n  if (pattern === undefined) {\n    return hasUnicodeWord(string) ? unicodeWords(string) : asciiWords(string);\n  }\n\n  return string.match(pattern) || [];\n}\n\nmodule.exports = words;","require(\"core-js/modules/es6.regexp.match\");\n\n/** Used to match words composed of alphanumeric characters. */\nvar reAsciiWord = /[^\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\x7f]+/g;\n/**\n * Splits an ASCII `string` into an array of its words.\n *\n * @private\n * @param {string} The string to inspect.\n * @returns {Array} Returns the words of `string`.\n */\n\nfunction asciiWords(string) {\n  return string.match(reAsciiWord) || [];\n}\n\nmodule.exports = asciiWords;","/** Used to detect strings that need a more robust regexp to match words. */\nvar reHasUnicodeWord = /[a-z][A-Z]|[A-Z]{2}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/;\n/**\n * Checks if `string` contains a word composed of Unicode symbols.\n *\n * @private\n * @param {string} string The string to inspect.\n * @returns {boolean} Returns `true` if a word is found, else `false`.\n */\n\nfunction hasUnicodeWord(string) {\n  return reHasUnicodeWord.test(string);\n}\n\nmodule.exports = hasUnicodeWord;","require(\"core-js/modules/es6.regexp.match\");\n\nrequire(\"core-js/modules/es6.regexp.constructor\");\n\n/** Used to compose unicode character classes. */\nvar rsAstralRange = \"\\\\ud800-\\\\udfff\",\n    rsComboMarksRange = \"\\\\u0300-\\\\u036f\",\n    reComboHalfMarksRange = \"\\\\ufe20-\\\\ufe2f\",\n    rsComboSymbolsRange = \"\\\\u20d0-\\\\u20ff\",\n    rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange,\n    rsDingbatRange = \"\\\\u2700-\\\\u27bf\",\n    rsLowerRange = 'a-z\\\\xdf-\\\\xf6\\\\xf8-\\\\xff',\n    rsMathOpRange = '\\\\xac\\\\xb1\\\\xd7\\\\xf7',\n    rsNonCharRange = '\\\\x00-\\\\x2f\\\\x3a-\\\\x40\\\\x5b-\\\\x60\\\\x7b-\\\\xbf',\n    rsPunctuationRange = \"\\\\u2000-\\\\u206f\",\n    rsSpaceRange = \" \\\\t\\\\x0b\\\\f\\\\xa0\\\\ufeff\\\\n\\\\r\\\\u2028\\\\u2029\\\\u1680\\\\u180e\\\\u2000\\\\u2001\\\\u2002\\\\u2003\\\\u2004\\\\u2005\\\\u2006\\\\u2007\\\\u2008\\\\u2009\\\\u200a\\\\u202f\\\\u205f\\\\u3000\",\n    rsUpperRange = 'A-Z\\\\xc0-\\\\xd6\\\\xd8-\\\\xde',\n    rsVarRange = \"\\\\ufe0e\\\\ufe0f\",\n    rsBreakRange = rsMathOpRange + rsNonCharRange + rsPunctuationRange + rsSpaceRange;\n/** Used to compose unicode capture groups. */\n\nvar rsApos = \"['\\u2019]\",\n    rsBreak = '[' + rsBreakRange + ']',\n    rsCombo = '[' + rsComboRange + ']',\n    rsDigits = '\\\\d+',\n    rsDingbat = '[' + rsDingbatRange + ']',\n    rsLower = '[' + rsLowerRange + ']',\n    rsMisc = '[^' + rsAstralRange + rsBreakRange + rsDigits + rsDingbatRange + rsLowerRange + rsUpperRange + ']',\n    rsFitz = \"\\\\ud83c[\\\\udffb-\\\\udfff]\",\n    rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')',\n    rsNonAstral = '[^' + rsAstralRange + ']',\n    rsRegional = \"(?:\\\\ud83c[\\\\udde6-\\\\uddff]){2}\",\n    rsSurrPair = \"[\\\\ud800-\\\\udbff][\\\\udc00-\\\\udfff]\",\n    rsUpper = '[' + rsUpperRange + ']',\n    rsZWJ = \"\\\\u200d\";\n/** Used to compose unicode regexes. */\n\nvar rsMiscLower = '(?:' + rsLower + '|' + rsMisc + ')',\n    rsMiscUpper = '(?:' + rsUpper + '|' + rsMisc + ')',\n    rsOptContrLower = '(?:' + rsApos + '(?:d|ll|m|re|s|t|ve))?',\n    rsOptContrUpper = '(?:' + rsApos + '(?:D|LL|M|RE|S|T|VE))?',\n    reOptMod = rsModifier + '?',\n    rsOptVar = '[' + rsVarRange + ']?',\n    rsOptJoin = '(?:' + rsZWJ + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*',\n    rsOrdLower = '\\\\d*(?:1st|2nd|3rd|(?![123])\\\\dth)(?=\\\\b|[A-Z_])',\n    rsOrdUpper = '\\\\d*(?:1ST|2ND|3RD|(?![123])\\\\dTH)(?=\\\\b|[a-z_])',\n    rsSeq = rsOptVar + reOptMod + rsOptJoin,\n    rsEmoji = '(?:' + [rsDingbat, rsRegional, rsSurrPair].join('|') + ')' + rsSeq;\n/** Used to match complex or compound words. */\n\nvar reUnicodeWord = RegExp([rsUpper + '?' + rsLower + '+' + rsOptContrLower + '(?=' + [rsBreak, rsUpper, '$'].join('|') + ')', rsMiscUpper + '+' + rsOptContrUpper + '(?=' + [rsBreak, rsUpper + rsMiscLower, '$'].join('|') + ')', rsUpper + '?' + rsMiscLower + '+' + rsOptContrLower, rsUpper + '+' + rsOptContrUpper, rsOrdUpper, rsOrdLower, rsDigits, rsEmoji].join('|'), 'g');\n/**\n * Splits a Unicode `string` into an array of its words.\n *\n * @private\n * @param {string} The string to inspect.\n * @returns {Array} Returns the words of `string`.\n */\n\nfunction unicodeWords(string) {\n  return string.match(reUnicodeWord) || [];\n}\n\nmodule.exports = unicodeWords;"],"sourceRoot":""}