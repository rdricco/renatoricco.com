{"version":3,"sources":["webpack:///./src/templates/listing.jsx","webpack:///./src/components/Utils/SEO/SEO.jsx","webpack:///./node_modules/url-join/lib/url-join.js"],"names":["Listing","renderPaging","this","props","pageContext","currentPageNum","pageCount","prevPage","nextPage","isFirstPage","isLastPage","className","to","Array","map","_val","index","pageNum","key","render","postEdges","data","allMarkdownRemark","edges","title","config","siteTitle","ContentContainer","flexWrap","px","mx","as","fontSize","React","Component","listingQuery","styled","Box","SEO","description","image","postURL","postNode","postPath","postSEO","postMeta","frontmatter","excerpt","cover","urljoin","siteUrl","pathPrefix","siteDescription","siteLogo","match","blogURL","schemaOrgJSONLD","url","name","alternateName","siteTitleAlt","push","itemListElement","position","item","headline","content","type","JSON","stringify","property","siteFBAppID","userTwitter","definition","normalize","strArray","resultArray","length","TypeError","first","shift","replace","i","component","str","join","parts","split","arguments","slice","call","module","exports"],"mappings":"gqBAUqBA,E,wLACnBC,aAAA,WAAgB,IAAD,EACyBC,KAAKC,MAAMC,YAAzCC,EADK,EACLA,eAAgBC,EADX,EACWA,UAClBC,EACJF,EAAiB,GAAM,EAAI,UAA3B,WAAiDA,EAAiB,GAAlE,IACIG,EAAQ,WAAaH,EAAiB,GAA9B,IACRI,EAAiC,IAAnBJ,EACdK,EAAaL,IAAmBC,EAEtC,OACE,yBAAKK,UAAU,qBACXF,GAAe,kBAAC,OAAD,CAAMG,GAAIL,GAAV,YAChB,EAAIM,MAAMP,IAAYQ,KAAI,SAACC,EAAMC,GAChC,IAAMC,EAAUD,EAAQ,EACxB,OACE,kBAAC,OAAD,CACEE,IAAG,gBAAkBD,EACrBL,GAAgB,IAAZK,EAAgB,UAAhB,UAAsCA,EAAtC,KACHA,OAILP,GAAc,kBAAC,OAAD,CAAME,GAAIJ,GAAV,c,EAKtBW,OAAA,WACE,IAAMC,EAAYlB,KAAKC,MAAMkB,KAAKC,kBAAkBC,MAEpD,OACE,kBAAC,IAAD,KACE,yBAAKZ,UAAU,qBACb,yBAAKA,UAAU,mBACb,kBAAC,IAAD,CAAQa,MAAOC,IAAOC,YACtB,kBAAC,IAAD,MACA,kBAACC,EAAD,KACE,kBAAC,MAAD,CAAKC,SAAS,OAAOC,GAAI,EAAGC,GAAI,GAC9B,kBAAC,UAAD,CAASC,GAAG,KAAKC,SAAU,CAAC,EAAG,EAAG,IAAlC,mBAIF,kBAAC,IAAD,CAAaZ,UAAWA,MAG3BlB,KAAKD,kB,GA7CqBgC,IAAMC,WAqD9BC,EAAY,aA6BnBR,EAAmBS,kBAAOC,OAAV,4EAAGD,CAAH,oL,qHCvFhBE,E,gLACLnB,OAAA,WAAU,IAELK,EACAe,EACAC,EACAC,EALI,EACgCvC,KAAKC,MAArCuC,EADA,EACAA,SAAUC,EADV,EACUA,SAAUC,EADpB,EACoBA,QAK5B,GAAIA,EAAS,CACZ,IAAMC,EAAWH,EAASI,YACvBtB,EAAUqB,EAAVrB,MACHe,EAAcM,EAASN,YAAcM,EAASN,YAAcG,EAASK,QACrEP,EAAQK,EAASG,MACjBP,EAAUQ,IAAQxB,IAAOyB,QAASzB,IAAO0B,WAAYR,QAGrDnB,EAAQC,IAAOC,UACfa,EAAcd,IAAO2B,gBACrBZ,EAAQf,IAAO4B,SAGXb,EAAMc,MAAN,6EACJd,EAAQS,IAAQxB,IAAOyB,QAASzB,IAAO0B,WAAYX,IAEpD,IAAMe,EAAUN,IAAQxB,IAAOyB,QAASzB,IAAO0B,YACzCK,EAAkB,CACvB,CACC,WAAY,oBACZ,QAAS,UACTC,IAAKF,EACLG,KAAMlC,EACNmC,cAAelC,IAAOmC,aAAenC,IAAOmC,aAAe,KAmC7D,OAhCIhB,GACHY,EAAgBK,KACf,CACC,WAAY,oBACZ,QAAS,iBACTC,gBAAiB,CAChB,CACC,QAAS,WACTC,SAAU,EACVC,KAAM,CACL,MAAOvB,EACPiB,KAAMlC,EACNgB,YAKJ,CACC,WAAY,oBACZ,QAAS,cACTiB,IAAKF,EACLG,KAAMlC,EACNmC,cAAelC,IAAOmC,aAAenC,IAAOmC,aAAe,GAC3DK,SAAUzC,EACVgB,MAAO,CACN,QAAS,cACTiB,IAAKjB,GAEND,gBAKF,kBAAC,IAAD,KAEC,0BAAMmB,KAAK,cAAcQ,QAAS3B,IAClC,0BAAMmB,KAAK,QAAQQ,QAAS1B,IAG5B,4BAAQ2B,KAAK,uBAAuBC,KAAKC,UAAUb,IAGnD,0BAAMc,SAAS,SAASJ,QAAStB,EAAUH,EAAUc,IACpDX,EAAU,0BAAM0B,SAAS,UAAUJ,QAAQ,YAAe,KAC3D,0BAAMI,SAAS,WAAWJ,QAAS1C,IACnC,0BAAM8C,SAAS,iBAAiBJ,QAAS3B,IACzC,0BAAM+B,SAAS,WAAWJ,QAAS1B,IACnC,0BAAM8B,SAAS,YAAYJ,QAASzC,IAAO8C,YAAc9C,IAAO8C,YAAc,KAG9E,0BAAMb,KAAK,eAAeQ,QAAQ,wBAClC,0BAAMR,KAAK,kBAAkBQ,QAASzC,IAAO+C,YAAc/C,IAAO+C,YAAc,KAChF,0BAAMd,KAAK,gBAAgBQ,QAAS1C,IACpC,0BAAMkC,KAAK,sBAAsBQ,QAAS3B,IAC1C,0BAAMmB,KAAK,gBAAgBQ,QAAS1B,M,GAvFtBN,aA6FHI,O,oBClGf,QAM0BmC,EAN1B,EAAQ,IAER,EAAQ,GAER,EAAQ,IAEkBA,EAEN,WAClB,SAASC,EAAUC,GACjB,IAAIC,EAAc,GAElB,GAAwB,IAApBD,EAASE,OACX,MAAO,GAGT,GAA2B,iBAAhBF,EAAS,GAClB,MAAM,IAAIG,UAAU,kCAAoCH,EAAS,IAInE,GAAIA,EAAS,GAAGrB,MAAM,iBAAmBqB,EAASE,OAAS,EAAG,CAC5D,IAAIE,EAAQJ,EAASK,QACrBL,EAAS,GAAKI,EAAQJ,EAAS,GAI7BA,EAAS,GAAGrB,MAAM,gBACpBqB,EAAS,GAAKA,EAAS,GAAGM,QAAQ,gBAAiB,UAEnDN,EAAS,GAAKA,EAAS,GAAGM,QAAQ,gBAAiB,SAGrD,IAAK,IAAIC,EAAI,EAAGA,EAAIP,EAASE,OAAQK,IAAK,CACxC,IAAIC,EAAYR,EAASO,GAEzB,GAAyB,iBAAdC,EACT,MAAM,IAAIL,UAAU,kCAAoCK,GAGxC,KAAdA,IAIAD,EAAI,IAENC,EAAYA,EAAUF,QAAQ,SAAU,KAKxCE,EAFED,EAAIP,EAASE,OAAS,EAEZM,EAAUF,QAAQ,SAAU,IAG5BE,EAAUF,QAAQ,SAAU,KAG1CL,EAAYf,KAAKsB,IAGnB,IAAIC,EAAMR,EAAYS,KAAK,KAKvBC,GAFJF,EAAMA,EAAIH,QAAQ,kBAAmB,OAErBM,MAAM,KAEtB,OADAH,EAAME,EAAMN,SAAWM,EAAMT,OAAS,EAAI,IAAM,IAAMS,EAAMD,KAAK,KAInE,OAAO,WASL,OAAOX,EANqB,iBAAjBc,UAAU,GACXA,UAAU,GAEV,GAAGC,MAAMC,KAAKF,cArEWG,EAAOC,QAASD,EAAOC,QAAUnB,SAAmF,0BAAjB,KAAiB","file":"component---src-templates-listing-jsx-eb9179d3020480e1caa0.js","sourcesContent":["import React from \"react\";\nimport Helmet from \"react-helmet\";\nimport { graphql, Link } from \"gatsby\";\nimport Layout from \"../layout\";\nimport styled from \"styled-components\";\nimport { Flex, Box, Heading } from \"rebass/styled-components\";\nimport PostListing from \"../components/Utils/PostListing/PostListing\";\nimport SEO from \"../components/Utils/SEO/SEO\";\nimport config from \"../../data/SiteConfig\";\n\nexport default class Listing extends React.Component {\n  renderPaging() {\n    const { currentPageNum, pageCount } = this.props.pageContext;\n    const prevPage =\n      currentPageNum - 1 === 1 ? \"/works/\" : `/works/${currentPageNum - 1}/`;\n    const nextPage = `/works/${currentPageNum + 1}/`;\n    const isFirstPage = currentPageNum === 1;\n    const isLastPage = currentPageNum === pageCount;\n\n    return (\n      <div className='paging-container'>\n        {!isFirstPage && <Link to={prevPage}>Anterior</Link>}\n        {[...Array(pageCount)].map((_val, index) => {\n          const pageNum = index + 1;\n          return (\n            <Link\n              key={`listing-page-${pageNum}`}\n              to={pageNum === 1 ? \"/works/\" : `/works/${pageNum}/`}>\n              {pageNum}\n            </Link>\n          );\n        })}\n        {!isLastPage && <Link to={nextPage}>Pr√≥ximos</Link>}\n      </div>\n    );\n  }\n\n  render() {\n    const postEdges = this.props.data.allMarkdownRemark.edges;\n\n    return (\n      <Layout>\n        <div className='listing-container'>\n          <div className='posts-container'>\n            <Helmet title={config.siteTitle} />\n            <SEO />\n            <ContentContainer>\n              <Box flexWrap='wrap' px={2} mx={0}>\n                <Heading as='h1' fontSize={[3, 4, 5]}>\n                  Featured Works\n                </Heading>\n              </Box>\n              <PostListing postEdges={postEdges} />\n            </ContentContainer>\n          </div>\n          {this.renderPaging()}\n        </div>\n      </Layout>\n    );\n  }\n}\n\n/* eslint no-undef: \"off\" */\nexport const listingQuery = graphql`\n  query ListingQuery($skip: Int!, $limit: Int!) {\n    allMarkdownRemark(\n      sort: { fields: [fields___date], order: DESC }\n      limit: $limit\n      skip: $skip\n    ) {\n      edges {\n        node {\n          fields {\n            slug\n            date(formatString: \"MM/YYYY\")\n          }\n          excerpt\n          timeToRead\n          frontmatter {\n            title\n            tags\n            cover\n            preview\n            date\n            transition\n          }\n        }\n      }\n    }\n  }\n`;\n\nconst ContentContainer = styled(Box)`\n  width: 100%;\n  max-width: 1300px;\n  min-height: 83vh;\n  margin: auto;\n  padding: 10px;\n  h1 {\n    margin: 50px 0 20px 0;\n  }\n  @media (max-width: 600px) {\n    .userLinks-container,\n    .notice-container {\n      padding: 20px;\n    }\n  }\n`;\n","import React, { Component } from 'react';\nimport Helmet from 'react-helmet';\nimport urljoin from 'url-join';\nimport config from '../../../../data/SiteConfig';\n\nclass SEO extends Component {\n\trender() {\n\t\tconst { postNode, postPath, postSEO } = this.props;\n\t\tlet title;\n\t\tlet description;\n\t\tlet image;\n\t\tlet postURL;\n\t\tif (postSEO) {\n\t\t\tconst postMeta = postNode.frontmatter;\n\t\t\t({ title } = postMeta);\n\t\t\tdescription = postMeta.description ? postMeta.description : postNode.excerpt;\n\t\t\timage = postMeta.cover;\n\t\t\tpostURL = urljoin(config.siteUrl, config.pathPrefix, postPath);\n\t\t}\n\t\telse {\n\t\t\ttitle = config.siteTitle;\n\t\t\tdescription = config.siteDescription;\n\t\t\timage = config.siteLogo;\n\t\t}\n\n\t\tif (!image.match(`(https?|ftp|file)://[-A-Za-z0-9+&@#/%?=~_|!:,.;]+[-A-Za-z0-9+&@#/%=~_|]`))\n\t\t\timage = urljoin(config.siteUrl, config.pathPrefix, image);\n\n\t\tconst blogURL = urljoin(config.siteUrl, config.pathPrefix);\n\t\tconst schemaOrgJSONLD = [\n\t\t\t{\n\t\t\t\t'@context': 'http://schema.org',\n\t\t\t\t'@type': 'WebSite',\n\t\t\t\turl: blogURL,\n\t\t\t\tname: title,\n\t\t\t\talternateName: config.siteTitleAlt ? config.siteTitleAlt : ''\n\t\t\t}\n\t\t];\n\t\tif (postSEO) {\n\t\t\tschemaOrgJSONLD.push(\n\t\t\t\t{\n\t\t\t\t\t'@context': 'http://schema.org',\n\t\t\t\t\t'@type': 'BreadcrumbList',\n\t\t\t\t\titemListElement: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t'@type': 'ListItem',\n\t\t\t\t\t\t\tposition: 1,\n\t\t\t\t\t\t\titem: {\n\t\t\t\t\t\t\t\t'@id': postURL,\n\t\t\t\t\t\t\t\tname: title,\n\t\t\t\t\t\t\t\timage\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t'@context': 'http://schema.org',\n\t\t\t\t\t'@type': 'BlogPosting',\n\t\t\t\t\turl: blogURL,\n\t\t\t\t\tname: title,\n\t\t\t\t\talternateName: config.siteTitleAlt ? config.siteTitleAlt : '',\n\t\t\t\t\theadline: title,\n\t\t\t\t\timage: {\n\t\t\t\t\t\t'@type': 'ImageObject',\n\t\t\t\t\t\turl: image\n\t\t\t\t\t},\n\t\t\t\t\tdescription\n\t\t\t\t}\n\t\t\t);\n\t\t}\n\t\treturn (\n\t\t\t<Helmet>\n\t\t\t\t{/* General tags */}\n\t\t\t\t<meta name='description' content={description} />\n\t\t\t\t<meta name='image' content={image} />\n\n\t\t\t\t{/* Schema.org tags */}\n\t\t\t\t<script type='application/ld+json'>{JSON.stringify(schemaOrgJSONLD)}</script>\n\n\t\t\t\t{/* OpenGraph tags */}\n\t\t\t\t<meta property='og:url' content={postSEO ? postURL : blogURL} />\n\t\t\t\t{postSEO ? <meta property='og:type' content='article' /> : null}\n\t\t\t\t<meta property='og:title' content={title} />\n\t\t\t\t<meta property='og:description' content={description} />\n\t\t\t\t<meta property='og:image' content={image} />\n\t\t\t\t<meta property='fb:app_id' content={config.siteFBAppID ? config.siteFBAppID : ''} />\n\n\t\t\t\t{/* Twitter Card tags */}\n\t\t\t\t<meta name='twitter:card' content='summary_large_image' />\n\t\t\t\t<meta name='twitter:creator' content={config.userTwitter ? config.userTwitter : ''} />\n\t\t\t\t<meta name='twitter:title' content={title} />\n\t\t\t\t<meta name='twitter:description' content={description} />\n\t\t\t\t<meta name='twitter:image' content={image} />\n\t\t\t</Helmet>\n\t\t);\n\t}\n}\n\nexport default SEO;\n","require(\"core-js/modules/es6.regexp.split\");\n\nrequire(\"core-js/modules/es6.regexp.replace\");\n\nrequire(\"core-js/modules/es6.regexp.match\");\n\n(function (name, context, definition) {\n  if (typeof module !== 'undefined' && module.exports) module.exports = definition();else if (typeof define === 'function' && define.amd) define(definition);else context[name] = definition();\n})('urljoin', this, function () {\n  function normalize(strArray) {\n    var resultArray = [];\n\n    if (strArray.length === 0) {\n      return '';\n    }\n\n    if (typeof strArray[0] !== 'string') {\n      throw new TypeError('Url must be a string. Received ' + strArray[0]);\n    } // If the first part is a plain protocol, we combine it with the next part.\n\n\n    if (strArray[0].match(/^[^/:]+:\\/*$/) && strArray.length > 1) {\n      var first = strArray.shift();\n      strArray[0] = first + strArray[0];\n    } // There must be two or three slashes in the file protocol, two slashes in anything else.\n\n\n    if (strArray[0].match(/^file:\\/\\/\\//)) {\n      strArray[0] = strArray[0].replace(/^([^/:]+):\\/*/, '$1:///');\n    } else {\n      strArray[0] = strArray[0].replace(/^([^/:]+):\\/*/, '$1://');\n    }\n\n    for (var i = 0; i < strArray.length; i++) {\n      var component = strArray[i];\n\n      if (typeof component !== 'string') {\n        throw new TypeError('Url must be a string. Received ' + component);\n      }\n\n      if (component === '') {\n        continue;\n      }\n\n      if (i > 0) {\n        // Removing the starting slashes for each component but the first.\n        component = component.replace(/^[\\/]+/, '');\n      }\n\n      if (i < strArray.length - 1) {\n        // Removing the ending slashes for each component but the last.\n        component = component.replace(/[\\/]+$/, '');\n      } else {\n        // For the last component we will combine multiple slashes to a single one.\n        component = component.replace(/[\\/]+$/, '/');\n      }\n\n      resultArray.push(component);\n    }\n\n    var str = resultArray.join('/'); // Each input component is now separated by a single slash except the possible first plain protocol part.\n    // remove trailing slash before parameters or hash\n\n    str = str.replace(/\\/(\\?|&|#[^!])/g, '$1'); // replace ? in parameters with &\n\n    var parts = str.split('?');\n    str = parts.shift() + (parts.length > 0 ? '?' : '') + parts.join('&');\n    return str;\n  }\n\n  return function () {\n    var input;\n\n    if (typeof arguments[0] === 'object') {\n      input = arguments[0];\n    } else {\n      input = [].slice.call(arguments);\n    }\n\n    return normalize(input);\n  };\n});"],"sourceRoot":""}