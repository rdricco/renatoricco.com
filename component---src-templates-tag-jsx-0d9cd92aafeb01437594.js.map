{"version":3,"sources":["webpack:///./src/templates/tag.jsx"],"names":["TagTemplate","render","tag","this","props","pageContext","postEdges","data","allMarkdownRemark","edges","className","title","config","siteTitle","ContentContainer","flexWrap","px","mx","as","fontSize","React","Component","pageQuery","styled","Box"],"mappings":"+QAYqBA,E,gLACnBC,OAAA,WAAU,IACAC,EAAQC,KAAKC,MAAMC,YAAnBH,IACFI,EAAYH,KAAKC,MAAMG,KAAKC,kBAAkBC,MACpD,OACE,kBAAC,IAAD,KACE,yBAAKC,UAAU,iBACb,kBAAC,IAAD,CAAQC,MAAK,oBAAsBT,EAAtB,OAAgCU,IAAOC,YACpD,kBAACC,EAAD,KACE,kBAAC,MAAD,CAAKC,SAAS,OAAOC,GAAI,EAAGC,GAAI,GAC9B,kBAAC,UAAD,CAASC,GAAG,KAAKC,SAAU,CAAC,EAAG,EAAG,IAAlC,oBACoBjB,EADpB,MAIF,kBAAC,IAAD,CAAaI,UAAWA,Q,GAdKc,IAAMC,WAsBlCC,EAAS,aA8BhBR,EAAmBS,kBAAOC,OAAV,wEAAGD,CAAH","file":"component---src-templates-tag-jsx-0d9cd92aafeb01437594.js","sourcesContent":["import React from \"react\";\nimport Helmet from \"react-helmet\";\nimport { graphql } from \"gatsby\";\n\nimport Layout from \"../layout\";\n\nimport styled from \"styled-components\";\nimport { Flex, Box, Heading } from \"rebass/styled-components\";\n\nimport PostListing from \"../components/Utils/PostListing/PostListing\";\nimport config from \"../../data/SiteConfig\";\n\nexport default class TagTemplate extends React.Component {\n  render() {\n    const { tag } = this.props.pageContext;\n    const postEdges = this.props.data.allMarkdownRemark.edges;\n    return (\n      <Layout>\n        <div className='tag-container'>\n          <Helmet title={`Posts tagged as \"${tag}\" | ${config.siteTitle}`} />\n          <ContentContainer>\n            <Box flexWrap='wrap' px={2} mx={0}>\n              <Heading as='h1' fontSize={[3, 4, 5]}>\n                Works tagged as \"{tag}\"\n              </Heading>\n            </Box>\n            <PostListing postEdges={postEdges} />\n          </ContentContainer>\n        </div>\n      </Layout>\n    );\n  }\n}\n\nexport const pageQuery = graphql`\n  query TagPage($tag: String) {\n    allMarkdownRemark(\n      limit: 1000\n      sort: { fields: [fields___date], order: DESC }\n      filter: { frontmatter: { tags: { in: [$tag] } } }\n    ) {\n      totalCount\n      edges {\n        node {\n          fields {\n            slug\n            date\n          }\n          excerpt\n          timeToRead\n          frontmatter {\n            title\n            date\n            preview\n            cover\n            tags\n            category\n          }\n        }\n      }\n    }\n  }\n`;\n\nconst ContentContainer = styled(Box)`\n  width: 100%;\n  max-width: 1300px;\n  min-height: 83vh;\n  margin: auto;\n  padding: 10px;\n  h1 {\n    margin: 50px 0 20px 0;\n  }\n  @media (max-width: 600px) {\n    .userLinks-container,\n    .notice-container {\n      padding: 20px;\n    }\n  }\n`;\n"],"sourceRoot":""}