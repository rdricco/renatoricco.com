{"version":3,"sources":["webpack:///./src/templates/category.jsx"],"names":["CategoryTemplate","render","category","this","props","pageContext","postEdges","data","allMarkdownRemark","edges","className","title","config","siteTitle","ContentContainer","flexWrap","px","mx","as","fontSize","React","Component","pageQuery","styled","Box"],"mappings":"+QAQqBA,E,gLACnBC,OAAA,WAAU,IACAC,EAAaC,KAAKC,MAAMC,YAAxBH,SACFI,EAAYH,KAAKC,MAAMG,KAAKC,kBAAkBC,MACpD,OACE,kBAAC,IAAD,KACE,yBAAKC,UAAU,sBACb,kBAAC,IAAD,CACEC,MAAK,sBAAwBT,EAAxB,OAAuCU,IAAOC,YAErD,kBAACC,EAAD,KACE,kBAAC,MAAD,CAAKC,SAAS,OAAOC,GAAI,EAAGC,GAAI,GAC9B,kBAAC,UAAD,CAASC,GAAG,KAAKC,SAAU,CAAC,EAAG,EAAG,IAAlC,mBAIF,kBAAC,IAAD,CAAab,UAAWA,KACN,O,GAjBgBc,IAAMC,WAyBvCC,EAAS,aA4BhBR,EAAmBS,kBAAOC,OAAV,6EAAGD,CAAH","file":"component---src-templates-category-jsx-6b09f9b23f9dd111a7ee.js","sourcesContent":["import React from \"react\";\nimport Helmet from \"react-helmet\";\nimport { graphql } from \"gatsby\";\nimport Layout from \"../layout\";\nimport PostListing from \"../components/Utils/PostListing/PostListing\";\nimport config from \"../../data/SiteConfig\";\nimport styled from \"styled-components\";\nimport { Flex, Box, Heading } from \"rebass/styled-components\";\nexport default class CategoryTemplate extends React.Component {\n  render() {\n    const { category } = this.props.pageContext;\n    const postEdges = this.props.data.allMarkdownRemark.edges;\n    return (\n      <Layout>\n        <div className='category-container'>\n          <Helmet\n            title={`Posts in category \"${category}\" | ${config.siteTitle}`}\n          />\n          <ContentContainer>\n            <Box flexWrap='wrap' px={2} mx={0}>\n              <Heading as='h1' fontSize={[3, 4, 5]}>\n                Featured Works\n              </Heading>\n            </Box>\n            <PostListing postEdges={postEdges} />\n          </ContentContainer>{\" \"}\n        </div>\n      </Layout>\n    );\n  }\n}\n\n/* eslint no-undef: \"off\" */\nexport const pageQuery = graphql`\n  query CategoryPage($category: String) {\n    allMarkdownRemark(\n      limit: 1000\n      sort: { fields: [fields___date], order: DESC }\n      filter: { frontmatter: { category: { eq: $category } } }\n    ) {\n      totalCount\n      edges {\n        node {\n          fields {\n            slug\n            date\n          }\n          excerpt\n          timeToRead\n          frontmatter {\n            title\n            tags\n            cover\n            date\n          }\n        }\n      }\n    }\n  }\n`;\n\nconst ContentContainer = styled(Box)`\n  width: 100%;\n  max-width: 1300px;\n  min-height: 83vh;\n  margin: auto;\n  padding: 10px;\n  h1 {\n    margin: 50px 0 20px 0;\n  }\n  @media (max-width: 600px) {\n    .userLinks-container,\n    .notice-container {\n      padding: 20px;\n    }\n  }\n`;\n"],"sourceRoot":""}